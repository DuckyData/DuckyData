@model DuckyData1._0._0Alpha.Models.ForgotPasswordViewModel
@{
    ViewBag.Title = "Forgot your password?";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("ForgotPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Enter your email.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            <div ID="errorMessage"style="color: red;"></div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-primary" value="Send Request" />
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#@Html.IdFor(model => model.Email)').on("change keyup paste", function () {
                var email = $('#@Html.IdFor(model => model.Email)');
                var error = $('#errorMessage');

                var re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                if (re.test(email.val())) {
                    error.text("");
                    // Everything is fine
                }
                else
                {
                    error.text("The e-mail field is not a valid e-mail address.");
                   //"The Email field is not a valid e-mail address."
                }

                if (email.length > 50) {
                    error.text("Email too long, 50 characters maximum");
                    //"Email too long, 50 characters maximun"
                }
            });
        });

    </script>
}