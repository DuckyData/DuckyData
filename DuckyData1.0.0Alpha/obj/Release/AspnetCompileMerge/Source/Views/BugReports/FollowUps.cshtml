@model DuckyData1._0._0Alpha.ViewModels.FollowUps.FollowUpAddForm

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.report.subject)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.report.subject)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.report.date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.report.date)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.report.category)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.report.category)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.report.body)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.report.body)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.report.submittedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.report.submittedBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.report.assignTo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.report.assignTo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.report.status)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.report.status)
        </dd>
    </dl>
    <div class="form-horizontal">
     
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.report.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
